// STATUS: PROVISIONAL â€” Breaking changes allowed until Schema Freeze.
// PACKAGE: mcp.unity.v1
syntax = "proto3";
package mcp.unity.v1;
import "mcp/unity/v1/common.proto";

service EditorControl {
  rpc Health(HealthRequest) returns (HealthResponse);
  rpc GetPlayMode(Empty) returns (GetPlayModeResponse);
  rpc SetPlayMode(SetPlayModeRequest) returns (SetPlayModeResponse);
  rpc GetCompileDiagnostics(GetCompileDiagnosticsRequest) returns (GetCompileDiagnosticsResponse);
  rpc Scenes(ScenesRequest) returns (ScenesResponse);
}

message HealthRequest {}
message HealthResponse { 
  bool ready = 1;
  string version = 2;
  string status = 3; /* e.g., "OK" - kept for backward compatibility */
  // Optional project metadata (one or both may be empty depending on environment)
  string project_name = 4; // e.g., last directory name of project root
  string project_path = 5; // absolute path to Unity project root (parent of Assets)
}

message GetPlayModeResponse { bool is_playing = 1; }
message SetPlayModeRequest { bool play = 1; }
message SetPlayModeResponse { bool applied = 1; }

// Compile diagnostics messages
message GetCompileDiagnosticsRequest {
  uint32 max_items = 1;        // Maximum number of diagnostics to return
  string severity = 2;         // Filter by severity: "all", "error", "warning", "info"
  bool changed_only = 3;       // Return only changed diagnostics since last query
  string assembly = 4;         // Filter by assembly name
}

message CompileDiagnostic {
  string file_uri = 1;         // URI of the file containing the diagnostic
  DiagnosticRange range = 2;   // Location in the file
  string severity = 3;         // "error", "warning", "info"
  string message = 4;          // Diagnostic message
  string code = 5;             // Error code (e.g., "CS0103")
  string assembly = 6;         // Assembly name
  string source = 7;           // Source system (e.g., "Unity")
  string fingerprint = 8;      // Unique fingerprint for deduplication
  string first_seen = 9;       // ISO timestamp when first seen
  string last_seen = 10;       // ISO timestamp when last seen
}

message DiagnosticRange {
  uint32 line = 1;             // Line number (0-based)
  uint32 column = 2;           // Column number (0-based)
}

message DiagnosticSummary {
  uint32 errors = 1;           // Count of error diagnostics
  uint32 warnings = 2;         // Count of warning diagnostics
  uint32 infos = 3;            // Count of info diagnostics
  repeated string assemblies = 4; // List of assemblies with diagnostics
}

message GetCompileDiagnosticsResponse {
  bool success = 1;            // Whether the request was successful
  string error_message = 2;    // Error message if success is false
  string compile_id = 3;       // Unique ID for this compilation
  DiagnosticSummary summary = 4; // Summary statistics
  repeated CompileDiagnostic diagnostics = 5; // List of diagnostics
  bool truncated = 6;          // Whether results were truncated due to max_items
}

// Scene management messages
message OpenSceneRequest {
  string path = 1;  // Unity project-relative path e.g., "Assets/Scenes/Main.unity"
  bool additive = 2; // Load additively if true
}

message OpenSceneResponse { bool ok = 1; }

message SaveSceneRequest { string path = 1; }
message SaveSceneResponse { bool ok = 1; }

message GetOpenScenesRequest {}
message GetOpenScenesResponse {
  repeated string scenes = 1;      // Currently open scenes (project-relative paths)
  string active_scene = 2;         // Path of the active scene
}

message SetActiveSceneRequest { string path = 1; }
message SetActiveSceneResponse { bool ok = 1; }

message ScenesRequest {
  oneof payload {
    OpenSceneRequest open = 1;
    SaveSceneRequest save = 2;
    GetOpenScenesRequest get_open = 3;
    SetActiveSceneRequest set_active = 4;
  }
}

message ScenesResponse {
  int32 status_code = 1; // 0=OK, 2=INVALID_ARGUMENT, 13=INTERNAL
  string message = 2;
  oneof payload {
    OpenSceneResponse open = 10;
    SaveSceneResponse save = 11;
    GetOpenScenesResponse get_open = 12;
    SetActiveSceneResponse set_active = 13;
  }
}
