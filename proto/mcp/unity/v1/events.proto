// STATUS: PROVISIONAL â€” Breaking changes allowed until Schema Freeze.
// PACKAGE: mcp.unity.v1
syntax = "proto3";
package mcp.unity.v1;
import "mcp/unity/v1/common.proto";

service Events {
  // Server streaming example (bridge -> client). The Rust side will be a client receiving the stream.
  rpc SubscribeOperation(OperationRef) returns (stream OperationEvent);
}

message LogEvent {
  enum Level { TRACE=0; DEBUG=1; INFO=2; WARN=3; ERROR=4; }
  int64  monotonic_ts_ns = 1;    // sender clock
  Level  level           = 2;
  string message         = 3;
  string category        = 4;    // e.g., "Unity", "Build", "Assets"
  string stack_trace     = 5;    // optional, compacted
}

message OperationEvent {
  enum Kind { START=0; PROGRESS=1; COMPLETE=2; }
  string op_id       = 1;        // unique per operation
  Kind   kind        = 2;
  int32  progress    = 3;        // 0..100, for PROGRESS/COMPLETE
  int32  code        = 4;        // 0=OK; nonzero=error codes on COMPLETE
  string message     = 5;        // short human message
  string payload_json= 6;        // optional structured data
}