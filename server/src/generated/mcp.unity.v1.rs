// This file is @generated by prost-build.
/// Generic empty placeholder to avoid google.protobuf.Empty at L0.
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct Empty {}
/// Minimal operation reference for streaming/event demos.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationRef {
    /// opaque identifier
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct HealthRequest {}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct HealthResponse {
    #[prost(bool, tag = "1")]
    pub ready: bool,
    #[prost(string, tag = "2")]
    pub version: ::prost::alloc::string::String,
    /// e.g., "OK" - kept for backward compatibility
    #[prost(string, tag = "3")]
    pub status: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct GetPlayModeResponse {
    #[prost(bool, tag = "1")]
    pub is_playing: bool,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SetPlayModeRequest {
    #[prost(bool, tag = "1")]
    pub play: bool,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SetPlayModeResponse {
    #[prost(bool, tag = "1")]
    pub applied: bool,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ImportAssetRequest {
    #[prost(string, tag = "1")]
    pub path: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ImportAssetResponse {
    #[prost(bool, tag = "1")]
    pub queued: bool,
    #[prost(string, tag = "2")]
    pub op_id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct BuildPlayerRequest {
    #[prost(string, tag = "1")]
    pub target: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct BuildPlayerResponse {
    #[prost(bool, tag = "1")]
    pub started: bool,
    #[prost(string, tag = "2")]
    pub op_id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationGetRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationGetResponse {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub state: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub message: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationCancelRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationCancelResponse {
    #[prost(bool, tag = "1")]
    pub accepted: bool,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct OperationEvent {
    /// operation id
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    /// e.g., "progress", "completed", "error"
    #[prost(string, tag = "2")]
    pub kind: ::prost::alloc::string::String,
    /// free-form JSON string at L0
    #[prost(string, tag = "3")]
    pub payload: ::prost::alloc::string::String,
}
